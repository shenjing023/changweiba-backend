// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: stock_service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscribeStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StockId int64 `protobuf:"varint,2,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
}

func (x *SubscribeStockRequest) Reset() {
	*x = SubscribeStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stock_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeStockRequest) ProtoMessage() {}

func (x *SubscribeStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeStockRequest.ProtoReflect.Descriptor instead.
func (*SubscribeStockRequest) Descriptor() ([]byte, []int) {
	return file_stock_service_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeStockRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SubscribeStockRequest) GetStockId() int64 {
	if x != nil {
		return x.StockId
	}
	return 0
}

type UnSubscribeStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StockId int64 `protobuf:"varint,2,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
}

func (x *UnSubscribeStockRequest) Reset() {
	*x = UnSubscribeStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stock_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnSubscribeStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnSubscribeStockRequest) ProtoMessage() {}

func (x *UnSubscribeStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnSubscribeStockRequest.ProtoReflect.Descriptor instead.
func (*UnSubscribeStockRequest) Descriptor() ([]byte, []int) {
	return file_stock_service_proto_rawDescGZIP(), []int{1}
}

func (x *UnSubscribeStockRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UnSubscribeStockRequest) GetStockId() int64 {
	if x != nil {
		return x.StockId
	}
	return 0
}

type TradeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date        string  `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	EndPrice    float32 `protobuf:"fixed32,2,opt,name=end_price,json=endPrice,proto3" json:"end_price,omitempty"`
	Volumn      int64   `protobuf:"varint,3,opt,name=volumn,proto3" json:"volumn,omitempty"`
	XueqiuCount int64   `protobuf:"varint,4,opt,name=xueqiu_count,json=xueqiuCount,proto3" json:"xueqiu_count,omitempty"`
}

func (x *TradeData) Reset() {
	*x = TradeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stock_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeData) ProtoMessage() {}

func (x *TradeData) ProtoReflect() protoreflect.Message {
	mi := &file_stock_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeData.ProtoReflect.Descriptor instead.
func (*TradeData) Descriptor() ([]byte, []int) {
	return file_stock_service_proto_rawDescGZIP(), []int{2}
}

func (x *TradeData) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *TradeData) GetEndPrice() float32 {
	if x != nil {
		return x.EndPrice
	}
	return 0
}

func (x *TradeData) GetVolumn() int64 {
	if x != nil {
		return x.Volumn
	}
	return 0
}

func (x *TradeData) GetXueqiuCount() int64 {
	if x != nil {
		return x.XueqiuCount
	}
	return 0
}

type StockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Symbol    string       `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name      string       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	TradeData []*TradeData `protobuf:"bytes,4,rep,name=trade_data,json=tradeData,proto3" json:"trade_data,omitempty"`
}

func (x *StockData) Reset() {
	*x = StockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stock_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockData) ProtoMessage() {}

func (x *StockData) ProtoReflect() protoreflect.Message {
	mi := &file_stock_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockData.ProtoReflect.Descriptor instead.
func (*StockData) Descriptor() ([]byte, []int) {
	return file_stock_service_proto_rawDescGZIP(), []int{3}
}

func (x *StockData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StockData) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *StockData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StockData) GetTradeData() []*TradeData {
	if x != nil {
		return x.TradeData
	}
	return nil
}

type SubscribeStockTradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SubscribeStockTradeRequest) Reset() {
	*x = SubscribeStockTradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stock_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeStockTradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeStockTradeRequest) ProtoMessage() {}

func (x *SubscribeStockTradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeStockTradeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeStockTradeRequest) Descriptor() ([]byte, []int) {
	return file_stock_service_proto_rawDescGZIP(), []int{4}
}

func (x *SubscribeStockTradeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type SubscribeStockTradeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*StockData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SubscribeStockTradeReply) Reset() {
	*x = SubscribeStockTradeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stock_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeStockTradeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeStockTradeReply) ProtoMessage() {}

func (x *SubscribeStockTradeReply) ProtoReflect() protoreflect.Message {
	mi := &file_stock_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeStockTradeReply.ProtoReflect.Descriptor instead.
func (*SubscribeStockTradeReply) Descriptor() ([]byte, []int) {
	return file_stock_service_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeStockTradeReply) GetData() []*StockData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbolorname string `protobuf:"bytes,1,opt,name=symbolorname,proto3" json:"symbolorname,omitempty"`
}

func (x *SearchStockRequest) Reset() {
	*x = SearchStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stock_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStockRequest) ProtoMessage() {}

func (x *SearchStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStockRequest.ProtoReflect.Descriptor instead.
func (*SearchStockRequest) Descriptor() ([]byte, []int) {
	return file_stock_service_proto_rawDescGZIP(), []int{6}
}

func (x *SearchStockRequest) GetSymbolorname() string {
	if x != nil {
		return x.Symbolorname
	}
	return ""
}

type SearchStockReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stocks []*StockData `protobuf:"bytes,1,rep,name=stocks,proto3" json:"stocks,omitempty"`
}

func (x *SearchStockReply) Reset() {
	*x = SearchStockReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stock_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchStockReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStockReply) ProtoMessage() {}

func (x *SearchStockReply) ProtoReflect() protoreflect.Message {
	mi := &file_stock_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStockReply.ProtoReflect.Descriptor instead.
func (*SearchStockReply) Descriptor() ([]byte, []int) {
	return file_stock_service_proto_rawDescGZIP(), []int{7}
}

func (x *SearchStockReply) GetStocks() []*StockData {
	if x != nil {
		return x.Stocks
	}
	return nil
}

var File_stock_service_proto protoreflect.FileDescriptor

var file_stock_service_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x15, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x17, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x78,
	0x75, 0x65, 0x71, 0x69, 0x75, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x78, 0x75, 0x65, 0x71, 0x69, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x78,
	0x0a, 0x09, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x40, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x38, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x6f, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x6f, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x10, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x28, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x32, 0xc8, 0x02, 0x0a, 0x0c, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x2e, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x10, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x2e, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x5b, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x19,
	0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stock_service_proto_rawDescOnce sync.Once
	file_stock_service_proto_rawDescData = file_stock_service_proto_rawDesc
)

func file_stock_service_proto_rawDescGZIP() []byte {
	file_stock_service_proto_rawDescOnce.Do(func() {
		file_stock_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_stock_service_proto_rawDescData)
	})
	return file_stock_service_proto_rawDescData
}

var file_stock_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_stock_service_proto_goTypes = []interface{}{
	(*SubscribeStockRequest)(nil),      // 0: stock.SubscribeStockRequest
	(*UnSubscribeStockRequest)(nil),    // 1: stock.UnSubscribeStockRequest
	(*TradeData)(nil),                  // 2: stock.TradeData
	(*StockData)(nil),                  // 3: stock.StockData
	(*SubscribeStockTradeRequest)(nil), // 4: stock.SubscribeStockTradeRequest
	(*SubscribeStockTradeReply)(nil),   // 5: stock.SubscribeStockTradeReply
	(*SearchStockRequest)(nil),         // 6: stock.SearchStockRequest
	(*SearchStockReply)(nil),           // 7: stock.SearchStockReply
	(*emptypb.Empty)(nil),              // 8: google.protobuf.Empty
}
var file_stock_service_proto_depIdxs = []int32{
	2, // 0: stock.StockData.trade_data:type_name -> stock.TradeData
	3, // 1: stock.SubscribeStockTradeReply.data:type_name -> stock.StockData
	3, // 2: stock.SearchStockReply.stocks:type_name -> stock.StockData
	0, // 3: stock.StockService.SubscribeStock:input_type -> stock.SubscribeStockRequest
	1, // 4: stock.StockService.UnSubscribeStock:input_type -> stock.UnSubscribeStockRequest
	4, // 5: stock.StockService.SubscribeStockTrade:input_type -> stock.SubscribeStockTradeRequest
	6, // 6: stock.StockService.SearchStock:input_type -> stock.SearchStockRequest
	8, // 7: stock.StockService.SubscribeStock:output_type -> google.protobuf.Empty
	8, // 8: stock.StockService.UnSubscribeStock:output_type -> google.protobuf.Empty
	5, // 9: stock.StockService.SubscribeStockTrade:output_type -> stock.SubscribeStockTradeReply
	7, // 10: stock.StockService.SearchStock:output_type -> stock.SearchStockReply
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_stock_service_proto_init() }
func file_stock_service_proto_init() {
	if File_stock_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stock_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stock_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnSubscribeStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stock_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stock_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stock_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeStockTradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stock_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeStockTradeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stock_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stock_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchStockReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stock_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stock_service_proto_goTypes,
		DependencyIndexes: file_stock_service_proto_depIdxs,
		MessageInfos:      file_stock_service_proto_msgTypes,
	}.Build()
	File_stock_service_proto = out.File
	file_stock_service_proto_rawDesc = nil
	file_stock_service_proto_goTypes = nil
	file_stock_service_proto_depIdxs = nil
}
