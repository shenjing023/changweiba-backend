syntax = "proto3";

package srv.post;

enum Status{
    NORMAL=0;
    DELETE=1;
}

message Post {
    int64 id = 1;
    int64 user_id = 2;
    string topic = 3;
    int64 create_time = 4;
    int64 last_update = 5;
    int64 reply_num = 6;
    Status status = 7;
}

message Comment {
    int64 id = 1;
    int64 user_id = 2;
    int64 post_id = 3;
    string content = 4;
    int64 create_time = 5;
    int64 floor = 6;
    Status status = 7;
}

message Reply {
    int64 id = 1;
    int64 user_id = 2;
    int64 post_id = 3;
    int64 comment_id = 4;
    string content = 5;
    int64 create_time = 6;
    int64 parent_id = 7;
    int64 floor = 8;
    Status status = 9;
}

message NewPostRequest {
    int64 user_id = 1;
    string topic = 2;
    string content = 3;
}

message NewPostResponse {
    int64 post_id=1;
}

message NewCommentRequest {
    int64 user_id = 1;
    int64 post_id = 2;
    string content = 3;
}

message NewCommentResponse{
    int64 comment_id=1;
}

message NewReplyRequest {
    int64 user_id = 1;
    int64 post_id = 2;
    int64 comment_id = 3;
    string content = 4;
    int64 parent_id = 5;
}

message NewReplyResponse{
    int64 reply_id=1;
}

message DeleteRequest {
    int64 id = 1;
}

message DeleteResponse {
    bool success=1;
}

message PostRequest {
    int64 id = 1;
}

message PostResponse {
    Post post = 1;
}

message PostsRequest {
    int64 page = 1;
    int64 page_size = 2;
}

message PostsResponse {
    repeated Post posts = 1;
    int64 total_count=2;
}

message CommentRequest {
    int64 id = 1;
}

message CommentResponse {
    Comment comment = 1;
}

//通过post_id获取comments
message CommentsRequest {
    int64 post_id = 1;
    int64 page = 2;
    int64 page_size = 3;
}

message CommentsResponse {
    repeated Comment comments = 1;
    int64 total_count=2;
}

message ReplyRequest{
    int64 id=1;
}

message ReplyResponse{
    Reply reply=1;
}

//通过comment_id获取replies
message RepliesRequest{
    int64 comment_id=1;
    int64 page=2;
    int64 page_size=3;
}

message RepliesResponse{
    repeated Reply replies=1;
    int64 total_count=2;
}

//通过comment_ids获取reply
message RepliesByCommentsRequest{
    repeated int64 comment_ids=1 [packed=true];
    int64 limit=2;
}

message RepliesByCommentsResponse{
    repeated Replies_ replies=1;
    message Replies_{
        repeated Reply replies_=1;
    }
}

message PostsByUserIdRequest{
    int64 user_id=1;
    int64 page=2;
    int64 page_size=3;
}

message PostsByUserIdResponse{
    repeated Post posts=1;
    int64 total_count=2;
}

message CommentsByUserIdRequest{
    int64 user_id=1;
    int64 page=2;
    int64 page_size=3;
}

message CommentsByUserIdResponse{
    repeated Comment comments=1;
    int64 total_count=2;
}

message RepliesByUserIdRequest{
    int64 user_id=1;
    int64 page=2;
    int64 page_size=3;
}

message RepliesByUserIdResponse{
    repeated Reply replies=1;
    int64 total_count=2;
}


service PostService{
    rpc NewPost(NewPostRequest) returns(NewPostResponse){}
    rpc NewComment(NewCommentRequest) returns(NewCommentResponse){}
    rpc NewReply(NewReplyRequest) returns(NewReplyResponse){}
    rpc DeletePost(DeleteRequest) returns(DeleteResponse){}
    rpc DeleteComment(DeleteRequest) returns(DeleteResponse){}
    rpc DeleteReply(DeleteRequest) returns(DeleteResponse){}
    rpc GetPost(PostRequest) returns(PostResponse){}
    rpc GetComment(CommentRequest) returns(CommentResponse){}
    rpc GetReply(ReplyRequest) returns(ReplyResponse){}
    rpc GetCommentsByPostId(CommentsRequest) returns(CommentsResponse){}
    rpc GetRepliesByCommentId(RepliesRequest) returns(RepliesResponse){}
    rpc Posts(PostsRequest) returns(PostsResponse){}
    //rpc GetRepliesByCommentIds(RepliesByCommentsRequest) returns(RepliesByCommentsResponse){}
    rpc GetPostsByUserId(PostsByUserIdRequest) returns(PostsByUserIdResponse){}
    rpc GetCommentsByUserId(CommentsByUserIdRequest) returns(CommentsByUserIdResponse){}
    rpc GetRepliesByUserId(RepliesByUserIdRequest) returns(RepliesByUserIdResponse){}
}