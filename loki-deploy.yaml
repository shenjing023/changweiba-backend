# generate by kompose and update some config
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: istio-system
data:
  loki-config.yaml: |
    auth_enabled: false

    server:
      http_listen_port: 3100

    ingester:
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 1h # Any chunk not receiving new logs in this time will be flushed
      max_chunk_age: 1h # All chunks will be flushed when they hit this age, default is 1h
      chunk_target_size: 1048576 # Loki will attempt to build chunks up to 1.5MB, flushing first if chunk_idle_period or max_chunk_age is reached first
      chunk_retain_period: 30s # Must be greater than index read cache TTL if using an index cache (Default index read cache TTL is 5m)
      max_transfer_retries: 0 # Chunk transfers disabled

    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h

    storage_config:
      boltdb_shipper:
        active_index_directory: /loki/boltdb-shipper-active
        cache_location: /loki/boltdb-shipper-cache
        cache_ttl: 24h # Can be increased for faster performance over longer query periods, uses more disk space
        shared_store: filesystem
      filesystem:
        directory: /loki/chunks

    compactor:
      working_directory: /loki/boltdb-shipper-compactor
      shared_store: filesystem

    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      ingestion_rate_mb: 15

    chunk_store_config:
      max_look_back_period: 0s

    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s

    ruler:
      storage:
        type: local
        local:
          directory: /loki/rules
      rule_path: /loki/rules-temp
      alertmanager_url: http://localhost:9093
      ring:
        kvstore:
          store: inmemory
      enable_api: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.16.0 (0c01309)
  creationTimestamp: null
  labels:
    io.kompose.service: loki
  name: loki
  namespace: istio-system
spec:
  replicas: 1
  strategy: {}
  selector:
    matchLabels:
      io.kompose.service: loki
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: loki
    spec:
      containers:
        - args:
            - -config.file=/etc/loki/loki-config.yaml
          image: grafana/loki:2.0.0
          imagePullPolicy: IfNotPresent
          name: loki
          ports:
            - containerPort: 3100
          resources: {}
          volumeMounts:
            - mountPath: /etc/loki
              name: loki-configuration
      restartPolicy: Always
      volumes:
        - name: loki-configuration
          configMap:
            name: loki-config
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.16.0 (0c01309)
  creationTimestamp: null
  labels:
    io.kompose.service: loki
  name: loki
  namespace: istio-system
spec:
  ports:
    - name: "3100"
      port: 3100
      targetPort: 3100
  selector:
    io.kompose.service: loki
status:
  loadBalancer: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: istio-system
data:
  promtail-config.yaml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    positions:
      filename: /tmp/positions.yaml

    clients:
      - url: http://loki:3100/loki/api/v1/push

    scrape_configs:
      - job_name: system
        static_configs:
          - targets:
            - localhost
            labels:
              job: varlogs
              __path__: /var/log/containers/*log
          - targets:
            - localhost
            labels:
              app: account-service
              __path__: /var/log/pods/*_account-service-*/account-service/*.log
          - targets:
            - localhost
            labels:
              app: gateway-service
              __path__: /var/log/pods/*_gateway-service-*/gateway-service/*.log
          - targets:
            - localhost
            labels:
              app: post-service
              __path__: /var/log/pods/*_post-service-*/post-service/*.log
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.16.0 (0c01309)
  creationTimestamp: null
  labels:
    io.kompose.service: promtail
  name: promtail
  namespace: istio-system
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      io.kompose.service: promtail
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: promtail
    spec:
      containers:
        - args:
            - -config.file=/etc/promtail/promtail-config.yaml
          image: grafana/promtail:2.0.0
          imagePullPolicy: IfNotPresent
          name: promtail
          resources: {}
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - mountPath: /etc/promtail
              name: promtail-configuration
      restartPolicy: Always
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: promtail-configuration
          configMap:
            name: promtail-config
status: {}
