syntax = "proto3";

import "enums.proto";

option go_package = ".;pb";
package post;

message Post {
    int64 id = 1;
    int64 user_id = 2;
    string topic = 3;
    int64 create_time = 4;
    int64 last_update = 5;
    int64 reply_num = 6;
    enums.PostStatusEnum.Status status = 7;
}

message Comment {
    int64 id = 1;
    int64 user_id = 2;
    int64 post_id = 3;
    string content = 4;
    int64 create_time = 5;
    int64 floor = 6;
    enums.PostStatusEnum.Status status = 7;
}

message Reply {
    int64 id = 1;
    int64 user_id = 2;
    int64 post_id = 3;
    int64 comment_id = 4;
    string content = 5;
    int64 create_time = 6;
    int64 parent_id = 7;
    int64 floor = 8;
    enums.PostStatusEnum.Status status = 9;
}

message NewPostRequest {
    int64 user_id = 1;
    string topic = 2;
    string content = 3;
}

message NewPostReply {
    int64 post_id=1;
}

message NewCommentRequest {
    int64 user_id = 1;
    int64 post_id = 2;
    string content = 3;
}

message NewCommentReply{
    int64 comment_id=1;
}

message NewReplyRequest {
    int64 user_id = 1;
    int64 post_id = 2;
    int64 comment_id = 3;
    string content = 4;
    int64 parent_id = 5;
}

message NewReplyReply{
    int64 reply_id=1;
}

message DeleteRequest {
    repeated int64 ids = 1;
}

message DeleteReply {
    bool success=1;
}

message PostRequest {
    int64 id = 1;
}

message PostReply {
    Post post = 1;
}

message PostsRequest {
    int64 page = 1;
    int64 page_size = 2;
}

message PostsReply {
    repeated Post posts = 1;
    int64 total_count=2;
}

message CommentRequest {
    int64 id = 1;
}

message CommentReply {
    Comment comment = 1;
}

//通过post_id获取comments
message CommentsRequest {
    int64 post_id = 1;
    int64 page = 2;
    int64 page_size = 3;
}

message CommentsReply {
    repeated Comment comments = 1;
    int64 total_count=2;
}

message ReplyRequest{
    int64 id=1;
}

message ReplyReply{
    Reply reply=1;
}

//通过comment_id获取replies
message RepliesRequest{
    int64 comment_id=1;
    int64 page=2;
    int64 page_size=3;
}

message RepliesReply{
    repeated Reply replies=1;
    int64 total_count=2;
}

//通过comment_ids获取reply
message RepliesByCommentsRequest{
    repeated int64 comment_ids=1 [packed=true];
    int64 limit=2;
}

message RepliesByCommentsReply{
    repeated Replies_ replies=1;
    message Replies_{
        repeated Reply replies_=1;
    }
}

message PostsByUserIdRequest{
    int64 user_id=1;
    int64 page=2;
    int64 page_size=3;
}

message PostsByUserIdReply{
    repeated Post posts=1;
    int64 total_count=2;
}

message CommentsByUserIdRequest{
    int64 user_id=1;
    int64 page=2;
    int64 page_size=3;
}

message CommentsByUserIdReply{
    repeated Comment comments=1;
    int64 total_count=2;
}

message RepliesByUserIdRequest{
    int64 user_id=1;
    int64 page=2;
    int64 page_size=3;
}

message RepliesByUserIdReply{
    repeated Reply replies=1;
    int64 total_count=2;
}

message FirstCommentRequest{
    repeated int64 post_ids=1;
}

message FirstCommentReply{
    repeated Comment comments=1;
}


service PostService{
    rpc NewPost(NewPostRequest) returns(NewPostReply){}
    rpc NewComment(NewCommentRequest) returns(NewCommentReply){}
    rpc NewReply(NewReplyRequest) returns(NewReplyReply){}
    rpc DeletePosts(DeleteRequest) returns(DeleteReply){}
    rpc DeleteComments(DeleteRequest) returns(DeleteReply){}
    rpc DeleteReplies(DeleteRequest) returns(DeleteReply){}
    rpc GetPost(PostRequest) returns(PostReply){}
    rpc GetComment(CommentRequest) returns(CommentReply){}
    rpc GetReply(ReplyRequest) returns(ReplyReply){}
    rpc GetCommentsByPostId(CommentsRequest) returns(CommentsReply){}
    rpc GetRepliesByCommentId(RepliesRequest) returns(RepliesReply){}
    rpc GetPosts(PostsRequest) returns(PostsReply){}
    //rpc GetRepliesByCommentIds(RepliesByCommentsRequest) returns(RepliesByCommentsReply){}
    rpc GetPostsByUserId(PostsByUserIdRequest) returns(PostsByUserIdReply){}
    rpc GetCommentsByUserId(CommentsByUserIdRequest) returns(CommentsByUserIdReply){}
    rpc GetRepliesByUserId(RepliesByUserIdRequest) returns(RepliesByUserIdReply){}
    rpc GetPostFirstComment(FirstCommentRequest) returns(FirstCommentReply){}
}