// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AvatarColumns holds the columns for the "avatar" table.
	AvatarColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true, SchemaType: map[string]string{"mysql": "int UNSIGNED"}},
		{Name: "url", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "status", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint unsigned"}},
	}
	// AvatarTable holds the schema information for the "avatar" table.
	AvatarTable = &schema.Table{
		Name:       "avatar",
		Columns:    AvatarColumns,
		PrimaryKey: []*schema.Column{AvatarColumns[0]},
	}
	// BanTypeColumns holds the columns for the "ban_type" table.
	BanTypeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true, SchemaType: map[string]string{"mysql": "int UNSIGNED"}},
		{Name: "content", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
	}
	// BanTypeTable holds the schema information for the "ban_type" table.
	BanTypeTable = &schema.Table{
		Name:       "ban_type",
		Columns:    BanTypeColumns,
		PrimaryKey: []*schema.Column{BanTypeColumns[0]},
	}
	// UserColumns holds the columns for the "user" table.
	UserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true, SchemaType: map[string]string{"mysql": "int UNSIGNED"}},
		{Name: "nick_name", Type: field.TypeString, Unique: true, SchemaType: map[string]string{"mysql": "varchar(20)"}},
		{Name: "password", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "avatar", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "status", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint unsigned"}},
		{Name: "score", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "int UNSIGNED"}},
		{Name: "role", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint UNSIGNED"}},
		{Name: "create_at", Type: field.TypeInt64, Default: 0, SchemaType: map[string]string{"mysql": "int UNSIGNED"}},
		{Name: "update_at", Type: field.TypeInt64, Default: 0, SchemaType: map[string]string{"mysql": "int UNSIGNED"}},
	}
	// UserTable holds the schema information for the "user" table.
	UserTable = &schema.Table{
		Name:       "user",
		Columns:    UserColumns,
		PrimaryKey: []*schema.Column{UserColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AvatarTable,
		BanTypeTable,
		UserTable,
	}
)

func init() {
	AvatarTable.Annotation = &entsql.Annotation{
		Table: "avatar",
	}
	BanTypeTable.Annotation = &entsql.Annotation{
		Table: "ban_type",
	}
	UserTable.Annotation = &entsql.Annotation{
		Table: "user",
	}
}
